/*
 * This file is generated by jOOQ.
 */
package com.ef.generated;


import com.ef.generated.tables.Access;
import com.ef.generated.tables.Violations;
import com.ef.generated.tables.records.AccessRecord;
import com.ef.generated.tables.records.ViolationsRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>logs</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccessRecord, Integer> IDENTITY_ACCESS = Identities0.IDENTITY_ACCESS;
    public static final Identity<ViolationsRecord, Integer> IDENTITY_VIOLATIONS = Identities0.IDENTITY_VIOLATIONS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccessRecord> KEY_ACCESS_PRIMARY = UniqueKeys0.KEY_ACCESS_PRIMARY;
    public static final UniqueKey<ViolationsRecord> KEY_VIOLATIONS_PRIMARY = UniqueKeys0.KEY_VIOLATIONS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccessRecord, Integer> IDENTITY_ACCESS = Internal.createIdentity(Access.ACCESS, Access.ACCESS.ID);
        public static Identity<ViolationsRecord, Integer> IDENTITY_VIOLATIONS = Internal.createIdentity(Violations.VIOLATIONS, Violations.VIOLATIONS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccessRecord> KEY_ACCESS_PRIMARY = Internal.createUniqueKey(Access.ACCESS, "KEY_access_PRIMARY", Access.ACCESS.ID);
        public static final UniqueKey<ViolationsRecord> KEY_VIOLATIONS_PRIMARY = Internal.createUniqueKey(Violations.VIOLATIONS, "KEY_violations_PRIMARY", Violations.VIOLATIONS.ID);
    }
}
